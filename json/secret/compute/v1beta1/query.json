{
  "package": "secret.compute.v1beta1",
  "imports": [
    "gogoproto/gogo.proto",
    "secret/compute/v1beta1/types.proto",
    "google/protobuf/empty.proto",
    "google/api/annotations.proto",
    "cosmos/base/abci/v1beta1/abci.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "secret": {
        "nested": {
          "compute": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/enigmampc/SecretNetwork/x/compute/internal/types",
                  "(gogoproto.goproto_getters_all)": false,
                  "(gogoproto.equal_all)": true
                },
                "nested": {
                  "Query": {
                    "methods": {
                      "ContractInfo": {
                        "requestType": "QueryContractInfoRequest",
                        "responseType": "QueryContractInfoResponse",
                        "options": {
                          "(google.api.http).get": "/compute/v1beta1/contract/{address}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/compute/v1beta1/contract/{address}"
                            }
                          }
                        ]
                      },
                      "ContractsByCode": {
                        "requestType": "QueryContractsByCodeRequest",
                        "responseType": "QueryContractsByCodeResponse",
                        "options": {
                          "(google.api.http).get": "/compute/v1beta1/code/{code_id}/contracts"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/compute/v1beta1/code/{code_id}/contracts"
                            }
                          }
                        ]
                      },
                      "SmartContractState": {
                        "requestType": "QuerySmartContractStateRequest",
                        "responseType": "QuerySmartContractStateResponse",
                        "options": {
                          "(google.api.http).get": "/compute/v1beta1/contract/{address}/smart"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/compute/v1beta1/contract/{address}/smart"
                            }
                          }
                        ]
                      },
                      "Code": {
                        "requestType": "QueryCodeRequest",
                        "responseType": "QueryCodeResponse",
                        "options": {
                          "(google.api.http).get": "/compute/v1beta1/code/{code_id}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/compute/v1beta1/code/{code_id}"
                            }
                          }
                        ]
                      },
                      "Codes": {
                        "requestType": "google.protobuf.Empty",
                        "responseType": "QueryCodesResponse",
                        "options": {
                          "(google.api.http).get": "/compute/v1beta1/code"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/compute/v1beta1/code"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "QueryContractInfoRequest": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      }
                    }
                  },
                  "QueryContractInfoResponse": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      },
                      "ContractInfo": {
                        "type": "ContractInfo",
                        "id": 2,
                        "options": {
                          "(gogoproto.embed)": true,
                          "(gogoproto.jsontag)": ""
                        }
                      }
                    }
                  },
                  "QueryContractHistoryRequest": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      }
                    }
                  },
                  "QueryContractsByCodeRequest": {
                    "fields": {
                      "codeId": {
                        "type": "uint64",
                        "id": 1
                      }
                    }
                  },
                  "ContractInfoWithAddress": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      },
                      "ContractInfo": {
                        "type": "ContractInfo",
                        "id": 2,
                        "options": {
                          "(gogoproto.embed)": true,
                          "(gogoproto.jsontag)": ""
                        }
                      }
                    }
                  },
                  "QueryContractsByCodeResponse": {
                    "fields": {
                      "contractInfos": {
                        "rule": "repeated",
                        "type": "ContractInfoWithAddress",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QuerySmartContractStateRequest": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      },
                      "queryData": {
                        "type": "bytes",
                        "id": 2
                      }
                    }
                  },
                  "QueryContractAddressByLabelRequest": {
                    "fields": {
                      "label": {
                        "type": "string",
                        "id": 1
                      }
                    }
                  },
                  "QueryContractKeyRequest": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      }
                    }
                  },
                  "QueryContractHashRequest": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      }
                    }
                  },
                  "QuerySmartContractStateResponse": {
                    "fields": {
                      "data": {
                        "type": "bytes",
                        "id": 1
                      }
                    }
                  },
                  "QueryCodeRequest": {
                    "fields": {
                      "codeId": {
                        "type": "uint64",
                        "id": 1
                      }
                    }
                  },
                  "CodeInfoResponse": {
                    "fields": {
                      "codeId": {
                        "type": "uint64",
                        "id": 1,
                        "options": {
                          "(gogoproto.customname)": "CodeID",
                          "(gogoproto.jsontag)": "id"
                        }
                      },
                      "creator": {
                        "type": "bytes",
                        "id": 2,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      },
                      "dataHash": {
                        "type": "bytes",
                        "id": 3,
                        "options": {
                          "(gogoproto.casttype)": "github.com/tendermint/tendermint/libs/bytes.HexBytes"
                        }
                      },
                      "source": {
                        "type": "string",
                        "id": 4
                      },
                      "builder": {
                        "type": "string",
                        "id": 5
                      }
                    }
                  },
                  "QueryCodeResponse": {
                    "fields": {
                      "codeInfo": {
                        "type": "CodeInfoResponse",
                        "id": 1,
                        "options": {
                          "(gogoproto.embed)": true,
                          "(gogoproto.jsontag)": ""
                        }
                      },
                      "data": {
                        "type": "bytes",
                        "id": 2,
                        "options": {
                          "(gogoproto.jsontag)": "data"
                        }
                      }
                    }
                  },
                  "QueryCodesResponse": {
                    "fields": {
                      "codeInfos": {
                        "rule": "repeated",
                        "type": "CodeInfoResponse",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryContractAddressByLabelResponse": {
                    "fields": {
                      "address": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/cosmos/cosmos-sdk/types.AccAddress"
                        }
                      }
                    }
                  },
                  "QueryContractKeyResponse": {
                    "fields": {
                      "key": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/tendermint/tendermint/libs/bytes.HexBytes"
                        }
                      }
                    }
                  },
                  "QueryContractHashResponse": {
                    "fields": {
                      "codeHash": {
                        "type": "bytes",
                        "id": 1,
                        "options": {
                          "(gogoproto.casttype)": "github.com/tendermint/tendermint/libs/bytes.HexBytes"
                        }
                      }
                    }
                  },
                  "DecryptedAnswer": {
                    "options": {
                      "(gogoproto.equal)": false
                    },
                    "fields": {
                      "type": {
                        "type": "string",
                        "id": 1
                      },
                      "input": {
                        "type": "string",
                        "id": 2
                      },
                      "outputData": {
                        "type": "string",
                        "id": 3
                      },
                      "outputDataAsString": {
                        "type": "string",
                        "id": 4
                      },
                      "outputLogs": {
                        "rule": "repeated",
                        "type": "cosmos.base.abci.v1beta1.StringEvent",
                        "id": 5,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      },
                      "outputError": {
                        "type": "bytes",
                        "id": 6,
                        "options": {
                          "(gogoproto.casttype)": "encoding/json.RawMessage"
                        }
                      },
                      "plaintextError": {
                        "type": "string",
                        "id": 7
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}