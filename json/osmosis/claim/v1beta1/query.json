{
  "package": "osmosis.claim.v1beta1",
  "imports": [
    "gogoproto/gogo.proto",
    "google/api/annotations.proto",
    "cosmos/base/v1beta1/coin.proto",
    "osmosis/claim/v1beta1/claim.proto",
    "osmosis/claim/v1beta1/params.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "osmosis": {
        "nested": {
          "claim": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/osmosis-labs/osmosis/v7/x/claim/types"
                },
                "nested": {
                  "Query": {
                    "methods": {
                      "ModuleAccountBalance": {
                        "requestType": "QueryModuleAccountBalanceRequest",
                        "responseType": "QueryModuleAccountBalanceResponse",
                        "options": {
                          "(google.api.http).get": "/osmosis/claim/v1beta1/module_account_balance"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/osmosis/claim/v1beta1/module_account_balance"
                            }
                          }
                        ]
                      },
                      "Params": {
                        "requestType": "QueryParamsRequest",
                        "responseType": "QueryParamsResponse",
                        "options": {
                          "(google.api.http).get": "/osmosis/claim/v1beta1/params"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/osmosis/claim/v1beta1/params"
                            }
                          }
                        ]
                      },
                      "ClaimRecord": {
                        "requestType": "QueryClaimRecordRequest",
                        "responseType": "QueryClaimRecordResponse",
                        "options": {
                          "(google.api.http).get": "/osmosis/claim/v1beta1/claim_record/{address}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/osmosis/claim/v1beta1/claim_record/{address}"
                            }
                          }
                        ]
                      },
                      "ClaimableForAction": {
                        "requestType": "QueryClaimableForActionRequest",
                        "responseType": "QueryClaimableForActionResponse",
                        "options": {
                          "(google.api.http).get": "/osmosis/claim/v1beta1/claimable_for_action/{address}/{action}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/osmosis/claim/v1beta1/claimable_for_action/{address}/{action}"
                            }
                          }
                        ]
                      },
                      "TotalClaimable": {
                        "requestType": "QueryTotalClaimableRequest",
                        "responseType": "QueryTotalClaimableResponse",
                        "options": {
                          "(google.api.http).get": "/osmosis/claim/v1beta1/total_claimable/{address}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/osmosis/claim/v1beta1/total_claimable/{address}"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "QueryModuleAccountBalanceRequest": {
                    "fields": {}
                  },
                  "QueryModuleAccountBalanceResponse": {
                    "fields": {
                      "moduleAccountBalance": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:coins",
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                        }
                      }
                    }
                  },
                  "QueryParamsRequest": {
                    "fields": {}
                  },
                  "QueryParamsResponse": {
                    "fields": {
                      "params": {
                        "type": "Params",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryClaimRecordRequest": {
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:sender"
                        }
                      }
                    }
                  },
                  "QueryClaimRecordResponse": {
                    "fields": {
                      "claimRecord": {
                        "type": "ClaimRecord",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:claim_record",
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryClaimableForActionRequest": {
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:address"
                        }
                      },
                      "action": {
                        "type": "Action",
                        "id": 2,
                        "options": {
                          "(gogoproto.moretags)": "yaml:action"
                        }
                      }
                    }
                  },
                  "QueryClaimableForActionResponse": {
                    "fields": {
                      "coins": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:coins",
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                        }
                      }
                    }
                  },
                  "QueryTotalClaimableRequest": {
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:address"
                        }
                      }
                    }
                  },
                  "QueryTotalClaimableResponse": {
                    "fields": {
                      "coins": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:coins",
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}