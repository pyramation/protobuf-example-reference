{
  "package": "osmosis.incentives",
  "imports": [
    "gogoproto/gogo.proto",
    "google/protobuf/timestamp.proto",
    "cosmos/base/v1beta1/coin.proto",
    "osmosis/incentives/gauge.proto",
    "osmosis/lockup/lock.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "osmosis": {
        "nested": {
          "incentives": {
            "options": {
              "go_package": "github.com/osmosis-labs/osmosis/v7/x/incentives/types"
            },
            "nested": {
              "Msg": {
                "methods": {
                  "CreateGauge": {
                    "requestType": "MsgCreateGauge",
                    "responseType": "MsgCreateGaugeResponse"
                  },
                  "AddToGauge": {
                    "requestType": "MsgAddToGauge",
                    "responseType": "MsgAddToGaugeResponse"
                  }
                }
              },
              "MsgCreateGauge": {
                "fields": {
                  "isPerpetual": {
                    "type": "bool",
                    "id": 1
                  },
                  "owner": {
                    "type": "string",
                    "id": 2,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    }
                  },
                  "distributeTo": {
                    "type": "osmosis.lockup.QueryCondition",
                    "id": 3,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  },
                  "coins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 4,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    }
                  },
                  "startTime": {
                    "type": "google.protobuf.Timestamp",
                    "id": 5,
                    "options": {
                      "(gogoproto.stdtime)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:timestamp"
                    }
                  },
                  "numEpochsPaidOver": {
                    "type": "uint64",
                    "id": 6
                  }
                }
              },
              "MsgCreateGaugeResponse": {
                "fields": {}
              },
              "MsgAddToGauge": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    }
                  },
                  "gaugeId": {
                    "type": "uint64",
                    "id": 2
                  },
                  "rewards": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 3,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    }
                  }
                }
              },
              "MsgAddToGaugeResponse": {
                "fields": {}
              }
            }
          }
        }
      }
    }
  }
}