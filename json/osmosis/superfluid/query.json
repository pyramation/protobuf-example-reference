{
  "package": "osmosis.superfluid",
  "imports": [
    "gogoproto/gogo.proto",
    "cosmos/base/v1beta1/coin.proto",
    "google/api/annotations.proto",
    "google/protobuf/timestamp.proto",
    "google/protobuf/duration.proto",
    "osmosis/superfluid/superfluid.proto",
    "osmosis/superfluid/params.proto",
    "osmosis/lockup/lock.proto",
    "cosmos/base/query/v1beta1/pagination.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "osmosis": {
        "nested": {
          "superfluid": {
            "options": {
              "go_package": "github.com/osmosis-labs/osmosis/v7/x/superfluid/types"
            },
            "nested": {
              "Query": {
                "methods": {
                  "Params": {
                    "requestType": "QueryParamsRequest",
                    "responseType": "QueryParamsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/params"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/params"
                        }
                      }
                    ]
                  },
                  "AssetType": {
                    "requestType": "AssetTypeRequest",
                    "responseType": "AssetTypeResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/asset_type"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/asset_type"
                        }
                      }
                    ]
                  },
                  "AllAssets": {
                    "requestType": "AllAssetsRequest",
                    "responseType": "AllAssetsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/all_assets"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/all_assets"
                        }
                      }
                    ]
                  },
                  "AssetMultiplier": {
                    "requestType": "AssetMultiplierRequest",
                    "responseType": "AssetMultiplierResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/asset_multiplier"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/asset_multiplier"
                        }
                      }
                    ]
                  },
                  "AllIntermediaryAccounts": {
                    "requestType": "AllIntermediaryAccountsRequest",
                    "responseType": "AllIntermediaryAccountsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/all_intermediary_accounts"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/all_intermediary_accounts"
                        }
                      }
                    ]
                  },
                  "ConnectedIntermediaryAccount": {
                    "requestType": "ConnectedIntermediaryAccountRequest",
                    "responseType": "ConnectedIntermediaryAccountResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/connected_intermediary_account/{lock_id}"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/connected_intermediary_account/{lock_id}"
                        }
                      }
                    ]
                  },
                  "TotalSuperfluidDelegations": {
                    "requestType": "TotalSuperfluidDelegationsRequest",
                    "responseType": "TotalSuperfluidDelegationsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/all_superfluid_delegations"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/all_superfluid_delegations"
                        }
                      }
                    ]
                  },
                  "SuperfluidDelegationAmount": {
                    "requestType": "SuperfluidDelegationAmountRequest",
                    "responseType": "SuperfluidDelegationAmountResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/superfluid_delegation_amount"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/superfluid_delegation_amount"
                        }
                      }
                    ]
                  },
                  "SuperfluidDelegationsByDelegator": {
                    "requestType": "SuperfluidDelegationsByDelegatorRequest",
                    "responseType": "SuperfluidDelegationsByDelegatorResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/superfluid_delegations/{delegator_address}"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/superfluid_delegations/{delegator_address}"
                        }
                      }
                    ]
                  },
                  "SuperfluidUndelegationsByDelegator": {
                    "requestType": "SuperfluidUndelegationsByDelegatorRequest",
                    "responseType": "SuperfluidUndelegationsByDelegatorResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/superfluid_undelegations_by_delegator/{delegator_address}"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/superfluid_undelegations_by_delegator/{delegator_address}"
                        }
                      }
                    ]
                  },
                  "SuperfluidDelegationsByValidatorDenom": {
                    "requestType": "SuperfluidDelegationsByValidatorDenomRequest",
                    "responseType": "SuperfluidDelegationsByValidatorDenomResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/superfluid_delegations_by_validator_denom"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/superfluid_delegations_by_validator_denom"
                        }
                      }
                    ]
                  },
                  "EstimateSuperfluidDelegatedAmountByValidatorDenom": {
                    "requestType": "EstimateSuperfluidDelegatedAmountByValidatorDenomRequest",
                    "responseType": "EstimateSuperfluidDelegatedAmountByValidatorDenomResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/superfluid/v1beta1/estimate_superfluid_delegation_amount_by_validator_denom"
                    },
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/superfluid/v1beta1/estimate_superfluid_delegation_amount_by_validator_denom"
                        }
                      }
                    ]
                  }
                }
              },
              "QueryParamsRequest": {
                "fields": {}
              },
              "QueryParamsResponse": {
                "fields": {
                  "params": {
                    "type": "Params",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  }
                }
              },
              "AssetTypeRequest": {
                "fields": {
                  "denom": {
                    "type": "string",
                    "id": 1
                  }
                }
              },
              "AssetTypeResponse": {
                "fields": {
                  "assetType": {
                    "type": "SuperfluidAssetType",
                    "id": 1
                  }
                }
              },
              "AllAssetsRequest": {
                "fields": {}
              },
              "AllAssetsResponse": {
                "fields": {
                  "assets": {
                    "rule": "repeated",
                    "type": "SuperfluidAsset",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  }
                }
              },
              "AssetMultiplierRequest": {
                "fields": {
                  "denom": {
                    "type": "string",
                    "id": 1
                  }
                }
              },
              "AssetMultiplierResponse": {
                "fields": {
                  "osmoEquivalentMultiplier": {
                    "type": "OsmoEquivalentMultiplierRecord",
                    "id": 1
                  }
                }
              },
              "SuperfluidIntermediaryAccountInfo": {
                "fields": {
                  "denom": {
                    "type": "string",
                    "id": 1
                  },
                  "valAddr": {
                    "type": "string",
                    "id": 2
                  },
                  "gaugeId": {
                    "type": "uint64",
                    "id": 3
                  },
                  "address": {
                    "type": "string",
                    "id": 4
                  }
                }
              },
              "AllIntermediaryAccountsRequest": {
                "fields": {
                  "pagination": {
                    "type": "cosmos.base.query.v1beta1.PageRequest",
                    "id": 1
                  }
                }
              },
              "AllIntermediaryAccountsResponse": {
                "fields": {
                  "accounts": {
                    "rule": "repeated",
                    "type": "SuperfluidIntermediaryAccountInfo",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  },
                  "pagination": {
                    "type": "cosmos.base.query.v1beta1.PageResponse",
                    "id": 2
                  }
                }
              },
              "ConnectedIntermediaryAccountRequest": {
                "fields": {
                  "lockId": {
                    "type": "uint64",
                    "id": 1
                  }
                }
              },
              "ConnectedIntermediaryAccountResponse": {
                "fields": {
                  "account": {
                    "type": "SuperfluidIntermediaryAccountInfo",
                    "id": 1
                  }
                }
              },
              "TotalSuperfluidDelegationsRequest": {
                "fields": {}
              },
              "TotalSuperfluidDelegationsResponse": {
                "fields": {
                  "totalDelegations": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.customtype)": "github.com/cosmos/cosmos-sdk/types.Int",
                      "(gogoproto.moretags)": "yaml:total_superfluid_delegations",
                      "(gogoproto.nullable)": false
                    }
                  }
                }
              },
              "SuperfluidDelegationAmountRequest": {
                "fields": {
                  "delegatorAddress": {
                    "type": "string",
                    "id": 1
                  },
                  "validatorAddress": {
                    "type": "string",
                    "id": 2
                  },
                  "denom": {
                    "type": "string",
                    "id": 3
                  }
                }
              },
              "SuperfluidDelegationAmountResponse": {
                "fields": {
                  "amount": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    }
                  }
                }
              },
              "SuperfluidDelegationsByDelegatorRequest": {
                "fields": {
                  "delegatorAddress": {
                    "type": "string",
                    "id": 1
                  }
                }
              },
              "SuperfluidDelegationsByDelegatorResponse": {
                "fields": {
                  "superfluidDelegationRecords": {
                    "rule": "repeated",
                    "type": "SuperfluidDelegationRecord",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  },
                  "totalDelegatedCoins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 2,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    }
                  }
                }
              },
              "SuperfluidUndelegationsByDelegatorRequest": {
                "fields": {
                  "delegatorAddress": {
                    "type": "string",
                    "id": 1
                  },
                  "denom": {
                    "type": "string",
                    "id": 2
                  }
                }
              },
              "SuperfluidUndelegationsByDelegatorResponse": {
                "fields": {
                  "superfluidDelegationRecords": {
                    "rule": "repeated",
                    "type": "SuperfluidDelegationRecord",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  },
                  "totalUndelegatedCoins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 2,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    }
                  },
                  "syntheticLocks": {
                    "rule": "repeated",
                    "type": "osmosis.lockup.SyntheticLock",
                    "id": 3,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  }
                }
              },
              "SuperfluidDelegationsByValidatorDenomRequest": {
                "fields": {
                  "validatorAddress": {
                    "type": "string",
                    "id": 1
                  },
                  "denom": {
                    "type": "string",
                    "id": 2
                  }
                }
              },
              "SuperfluidDelegationsByValidatorDenomResponse": {
                "fields": {
                  "superfluidDelegationRecords": {
                    "rule": "repeated",
                    "type": "SuperfluidDelegationRecord",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    }
                  }
                }
              },
              "EstimateSuperfluidDelegatedAmountByValidatorDenomRequest": {
                "fields": {
                  "validatorAddress": {
                    "type": "string",
                    "id": 1
                  },
                  "denom": {
                    "type": "string",
                    "id": 2
                  }
                }
              },
              "EstimateSuperfluidDelegatedAmountByValidatorDenomResponse": {
                "fields": {
                  "totalDelegatedCoins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}