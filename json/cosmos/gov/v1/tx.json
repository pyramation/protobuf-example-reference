{
  "package": "cosmos.gov.v1",
  "imports": [
    "cosmos/base/v1beta1/coin.proto",
    "cosmos/gov/v1/gov.proto",
    "gogoproto/gogo.proto",
    "cosmos_proto/cosmos.proto",
    "google/protobuf/any.proto",
    "cosmos/msg/v1/msg.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "cosmos": {
        "nested": {
          "gov": {
            "nested": {
              "v1": {
                "options": {
                  "go_package": "github.com/cosmos/cosmos-sdk/x/gov/types/v1"
                },
                "nested": {
                  "Msg": {
                    "methods": {
                      "SubmitProposal": {
                        "requestType": "MsgSubmitProposal",
                        "responseType": "MsgSubmitProposalResponse"
                      },
                      "ExecLegacyContent": {
                        "requestType": "MsgExecLegacyContent",
                        "responseType": "MsgExecLegacyContentResponse"
                      },
                      "Vote": {
                        "requestType": "MsgVote",
                        "responseType": "MsgVoteResponse"
                      },
                      "VoteWeighted": {
                        "requestType": "MsgVoteWeighted",
                        "responseType": "MsgVoteWeightedResponse"
                      },
                      "Deposit": {
                        "requestType": "MsgDeposit",
                        "responseType": "MsgDepositResponse"
                      }
                    }
                  },
                  "MsgSubmitProposal": {
                    "options": {
                      "(cosmos.msg.v1.signer)": "proposer"
                    },
                    "fields": {
                      "messages": {
                        "rule": "repeated",
                        "type": "google.protobuf.Any",
                        "id": 1
                      },
                      "initialDeposit": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 2,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      },
                      "proposer": {
                        "type": "string",
                        "id": 3,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "metadata": {
                        "type": "string",
                        "id": 4
                      }
                    }
                  },
                  "MsgSubmitProposalResponse": {
                    "fields": {
                      "proposalId": {
                        "type": "uint64",
                        "id": 1
                      }
                    }
                  },
                  "MsgExecLegacyContent": {
                    "options": {
                      "(cosmos.msg.v1.signer)": "authority"
                    },
                    "fields": {
                      "content": {
                        "type": "google.protobuf.Any",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.accepts_interface)": "Content"
                        }
                      },
                      "authority": {
                        "type": "string",
                        "id": 2
                      }
                    }
                  },
                  "MsgExecLegacyContentResponse": {
                    "fields": {}
                  },
                  "MsgVote": {
                    "options": {
                      "(cosmos.msg.v1.signer)": "voter"
                    },
                    "fields": {
                      "proposalId": {
                        "type": "uint64",
                        "id": 1,
                        "options": {
                          "(gogoproto.jsontag)": "proposal_id"
                        }
                      },
                      "voter": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "option": {
                        "type": "VoteOption",
                        "id": 3
                      },
                      "metadata": {
                        "type": "string",
                        "id": 4
                      }
                    }
                  },
                  "MsgVoteResponse": {
                    "fields": {}
                  },
                  "MsgVoteWeighted": {
                    "options": {
                      "(cosmos.msg.v1.signer)": "voter"
                    },
                    "fields": {
                      "proposalId": {
                        "type": "uint64",
                        "id": 1,
                        "options": {
                          "(gogoproto.jsontag)": "proposal_id"
                        }
                      },
                      "voter": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "options": {
                        "rule": "repeated",
                        "type": "WeightedVoteOption",
                        "id": 3
                      },
                      "metadata": {
                        "type": "string",
                        "id": 4
                      }
                    }
                  },
                  "MsgVoteWeightedResponse": {
                    "fields": {}
                  },
                  "MsgDeposit": {
                    "options": {
                      "(cosmos.msg.v1.signer)": "depositor"
                    },
                    "fields": {
                      "proposalId": {
                        "type": "uint64",
                        "id": 1,
                        "options": {
                          "(gogoproto.jsontag)": "proposal_id"
                        }
                      },
                      "depositor": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "amount": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 3,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "MsgDepositResponse": {
                    "fields": {}
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}