{
  "package": "cosmos.bank.v1beta1",
  "imports": [
    "cosmos/base/query/v1beta1/pagination.proto",
    "gogoproto/gogo.proto",
    "google/api/annotations.proto",
    "cosmos/base/v1beta1/coin.proto",
    "cosmos/bank/v1beta1/bank.proto",
    "cosmos_proto/cosmos.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "cosmos": {
        "nested": {
          "bank": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/cosmos/cosmos-sdk/x/bank/types"
                },
                "nested": {
                  "Query": {
                    "methods": {
                      "Balance": {
                        "requestType": "QueryBalanceRequest",
                        "responseType": "QueryBalanceResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/balances/{address}/by_denom"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/balances/{address}/by_denom"
                            }
                          }
                        ]
                      },
                      "AllBalances": {
                        "requestType": "QueryAllBalancesRequest",
                        "responseType": "QueryAllBalancesResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/balances/{address}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/balances/{address}"
                            }
                          }
                        ]
                      },
                      "SpendableBalances": {
                        "requestType": "QuerySpendableBalancesRequest",
                        "responseType": "QuerySpendableBalancesResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/spendable_balances/{address}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/spendable_balances/{address}"
                            }
                          }
                        ]
                      },
                      "TotalSupply": {
                        "requestType": "QueryTotalSupplyRequest",
                        "responseType": "QueryTotalSupplyResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/supply"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/supply"
                            }
                          }
                        ]
                      },
                      "SupplyOf": {
                        "requestType": "QuerySupplyOfRequest",
                        "responseType": "QuerySupplyOfResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/supply/by_denom"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/supply/by_denom"
                            }
                          }
                        ]
                      },
                      "Params": {
                        "requestType": "QueryParamsRequest",
                        "responseType": "QueryParamsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/params"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/params"
                            }
                          }
                        ]
                      },
                      "DenomMetadata": {
                        "requestType": "QueryDenomMetadataRequest",
                        "responseType": "QueryDenomMetadataResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/denoms_metadata/{denom}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/denoms_metadata/{denom}"
                            }
                          }
                        ]
                      },
                      "DenomsMetadata": {
                        "requestType": "QueryDenomsMetadataRequest",
                        "responseType": "QueryDenomsMetadataResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/denoms_metadata"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/denoms_metadata"
                            }
                          }
                        ]
                      },
                      "DenomOwners": {
                        "requestType": "QueryDenomOwnersRequest",
                        "responseType": "QueryDenomOwnersResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/bank/v1beta1/denom_owners/{denom}"
                        },
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/bank/v1beta1/denom_owners/{denom}"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "QueryBalanceRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "denom": {
                        "type": "string",
                        "id": 2
                      }
                    }
                  },
                  "QueryBalanceResponse": {
                    "fields": {
                      "balance": {
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1
                      }
                    }
                  },
                  "QueryAllBalancesRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 2
                      }
                    }
                  },
                  "QueryAllBalancesResponse": {
                    "fields": {
                      "balances": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                        }
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2
                      }
                    }
                  },
                  "QuerySpendableBalancesRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 2
                      }
                    }
                  },
                  "QuerySpendableBalancesResponse": {
                    "fields": {
                      "balances": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                        }
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2
                      }
                    }
                  },
                  "QueryTotalSupplyRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 1
                      }
                    }
                  },
                  "QueryTotalSupplyResponse": {
                    "fields": {
                      "supply": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                        }
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2
                      }
                    }
                  },
                  "QuerySupplyOfRequest": {
                    "fields": {
                      "denom": {
                        "type": "string",
                        "id": 1
                      }
                    }
                  },
                  "QuerySupplyOfResponse": {
                    "fields": {
                      "amount": {
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryParamsRequest": {
                    "fields": {}
                  },
                  "QueryParamsResponse": {
                    "fields": {
                      "params": {
                        "type": "Params",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryDenomsMetadataRequest": {
                    "fields": {
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 1
                      }
                    }
                  },
                  "QueryDenomsMetadataResponse": {
                    "fields": {
                      "metadatas": {
                        "rule": "repeated",
                        "type": "Metadata",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2
                      }
                    }
                  },
                  "QueryDenomMetadataRequest": {
                    "fields": {
                      "denom": {
                        "type": "string",
                        "id": 1
                      }
                    }
                  },
                  "QueryDenomMetadataResponse": {
                    "fields": {
                      "metadata": {
                        "type": "Metadata",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryDenomOwnersRequest": {
                    "fields": {
                      "denom": {
                        "type": "string",
                        "id": 1
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 2
                      }
                    }
                  },
                  "DenomOwner": {
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "balance": {
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 2,
                        "options": {
                          "(gogoproto.nullable)": false
                        }
                      }
                    }
                  },
                  "QueryDenomOwnersResponse": {
                    "fields": {
                      "denomOwners": {
                        "rule": "repeated",
                        "type": "DenomOwner",
                        "id": 1
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}