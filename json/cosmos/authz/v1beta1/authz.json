{
  "package": "cosmos.authz.v1beta1",
  "imports": [
    "cosmos_proto/cosmos.proto",
    "google/protobuf/timestamp.proto",
    "gogoproto/gogo.proto",
    "google/protobuf/any.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "cosmos": {
        "nested": {
          "authz": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/cosmos/cosmos-sdk/x/authz",
                  "(gogoproto.goproto_getters_all)": false
                },
                "nested": {
                  "GenericAuthorization": {
                    "options": {
                      "(cosmos_proto.implements_interface)": "Authorization"
                    },
                    "fields": {
                      "msg": {
                        "type": "string",
                        "id": 1
                      }
                    }
                  },
                  "Grant": {
                    "fields": {
                      "authorization": {
                        "type": "google.protobuf.Any",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.accepts_interface)": "Authorization"
                        }
                      },
                      "expiration": {
                        "type": "google.protobuf.Timestamp",
                        "id": 2,
                        "options": {
                          "(gogoproto.stdtime)": true,
                          "(gogoproto.nullable)": true
                        }
                      }
                    }
                  },
                  "GrantAuthorization": {
                    "fields": {
                      "granter": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "grantee": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        }
                      },
                      "authorization": {
                        "type": "google.protobuf.Any",
                        "id": 3,
                        "options": {
                          "(cosmos_proto.accepts_interface)": "Authorization"
                        }
                      },
                      "expiration": {
                        "type": "google.protobuf.Timestamp",
                        "id": 4,
                        "options": {
                          "(gogoproto.stdtime)": true
                        }
                      }
                    }
                  },
                  "GrantQueueItem": {
                    "fields": {
                      "msgTypeUrls": {
                        "rule": "repeated",
                        "type": "string",
                        "id": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}